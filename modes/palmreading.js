/**
 * –ú–æ–¥—É–ª—å –¥–ª—è —Ä–µ–∂–∏–º—É –≥–∞–¥–∞–Ω–Ω—è –ø–æ —Ä—É—Ü—ñ (—Ö—ñ—Ä–æ–º–∞–Ω—Ç—ñ—è)
 * @module modes/palmreading
 */

const { Markup } = require('telegraf');
const fs = require('fs');
const path = require('path');
const { deductCoins, logActivity } = require('../helpers/utils');
const { callOpenAI } = require('../helpers/openai');

/**
 * –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Ä–µ–∂–∏–º—É –≥–∞–¥–∞–Ω–Ω—è –ø–æ —Ä—É—Ü—ñ –¥–ª—è –±–æ—Ç–∞
 * @param {Telegraf} bot - –ï–∫–∑–µ–º–ø–ª—è—Ä Telegraf –±–æ—Ç–∞
 */
function setupPalmReadingMode(bot) {
  // –ú–µ–Ω—é —Ä–µ–∂–∏–º—É –≥–∞–¥–∞–Ω–Ω—è –ø–æ —Ä—É—Ü—ñ
  const palmReadingMenuKeyboard = Markup.keyboard([
    ['üëã –ó–∞–≥–∞–ª—å–Ω–∏–π –∞–Ω–∞–ª—ñ–∑ —Ä—É–∫–∏', '‚ù§Ô∏è –õ—ñ–Ω—ñ—ó –∫–æ—Ö–∞–Ω–Ω—è'],
    ['üíº –ö–∞—Ä\'—î—Ä–∞ —ñ –¥–æ—Å—Ç–∞—Ç–æ–∫', 'üß¨ –ó–¥–æ—Ä–æ–≤\'—è —ñ –¥–æ–≤–≥–æ–ª—ñ—Ç—Ç—è'],
    ['üîÑ –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –≤ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é']
  ]).resize();

  // –û–±—Ä–æ–±–∫–∞ –≤–∏–±–æ—Ä—É —Ä–µ–∂–∏–º—É –≥–∞–¥–∞–Ω–Ω—è –ø–æ —Ä—É—Ü—ñ
  bot.hears('‚úã –ì–∞–¥–∞–Ω–Ω—è –ø–æ —Ä—É—Ü—ñ', async (ctx) => {
    ctx.session.mode = 'palmreading';
    await ctx.reply(`–í–∏ –≤–∏–±—Ä–∞–ª–∏ —Ä–µ–∂–∏–º "–ì–∞–¥–∞–Ω–Ω—è –ø–æ —Ä—É—Ü—ñ".
    
–ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ —á—ñ—Ç–∫–µ —Ñ–æ—Ç–æ —Å–≤–æ—î—ó –¥–æ–ª–æ–Ω—ñ –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É. –ù–∞–π–∫—Ä–∞—â–µ –ø—Ä–∞—Ü—é—î —Ñ–æ—Ç–æ –≤–Ω—É—Ç—Ä—ñ—à–Ω—å–æ—ó —Å—Ç–æ—Ä–æ–Ω–∏ –ª—ñ–≤–æ—ó —Ä—É–∫–∏ –ø—Ä–∏ –≥–∞—Ä–Ω–æ–º—É –æ—Å–≤—ñ—Ç–ª–µ–Ω–Ω—ñ.

–û–±–µ—Ä—ñ—Ç—å —Ç–∏–ø –∞–Ω–∞–ª—ñ–∑—É:`, palmReadingMenuKeyboard);
    logActivity(ctx, '–í—ñ–¥–∫—Ä–∏–≤ —Ä–µ–∂–∏–º –≥–∞–¥–∞–Ω–Ω—è –ø–æ —Ä—É—Ü—ñ');
  });

  // –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –≤ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
  bot.hears('üîÑ –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –≤ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é', async (ctx) => {
    ctx.session.mode = null;
    ctx.session.palmReadingType = null;
    await ctx.reply('–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é:', Markup.keyboard([
      ['üé¥ –¢–ê–†–û', '‚úã –ì–∞–¥–∞–Ω–Ω—è –ø–æ —Ä—É—Ü—ñ'],
      ['‚ú® –ê—Å—Ç—Ä–æ–ª–æ–≥—ñ—è', 'üî¢ –ù—É–º–µ—Ä–æ–ª–æ–≥—ñ—è'],
      ['üí∞ –ë–∞–ª–∞–Ω—Å', 'üõí –ú–∞–≥–∞–∑–∏–Ω']
    ]).resize());
  });

  // –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–∏–ø—É –∞–Ω–∞–ª—ñ–∑—É —Ä—É–∫–∏
  bot.hears(['üëã –ó–∞–≥–∞–ª—å–Ω–∏–π –∞–Ω–∞–ª—ñ–∑ —Ä—É–∫–∏', '‚ù§Ô∏è –õ—ñ–Ω—ñ—ó –∫–æ—Ö–∞–Ω–Ω—è', 'üíº –ö–∞—Ä\'—î—Ä–∞ —ñ –¥–æ—Å—Ç–∞—Ç–æ–∫', 'üß¨ –ó–¥–æ—Ä–æ–≤\'—è —ñ –¥–æ–≤–≥–æ–ª—ñ—Ç—Ç—è'], async (ctx) => {
    if (ctx.session.mode !== 'palmreading') return;
    
    const type = ctx.message.text;
    ctx.session.palmReadingType = type;
    
    const COST = 3; // –í–∞—Ä—Ç—ñ—Å—Ç—å –∞–Ω–∞–ª—ñ–∑—É —Ä—É–∫–∏ - 3 –º–æ–Ω–µ—Ç–∏
    
    if (!deductCoins(ctx, COST)) {
      await ctx.reply(`–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –º–æ–Ω–µ—Ç –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É —Ä—É–∫–∏. –í–∞—Ä—Ç—ñ—Å—Ç—å: ${COST} –º–æ–Ω–µ—Ç. –ü–æ–ø–æ–≤–Ω—ñ—Ç—å –±–∞–ª–∞–Ω—Å —É –º–∞–≥–∞–∑–∏–Ω—ñ.`);
      return;
    }
    
    await ctx.reply(`–í–∏–±—Ä–∞–Ω–æ —Ä–µ–∂–∏–º: ${type} (–≤–∏—Ç—Ä–∞—á–µ–Ω–æ ${COST} –º–æ–Ω–µ—Ç).
    
–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ —á—ñ—Ç–∫–µ —Ñ–æ—Ç–æ —Å–≤–æ—î—ó –¥–æ–ª–æ–Ω—ñ. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó:
- –°—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—É–π—Ç–µ –≤–Ω—É—Ç—Ä—ñ—à–Ω—é —Å—Ç–æ—Ä–æ–Ω—É –ª—ñ–≤–æ—ó —Ä—É–∫–∏ (–¥–ª—è –ø—Ä–∞–≤—à—ñ) –∞–±–æ –ø—Ä–∞–≤–æ—ó —Ä—É–∫–∏ (–¥–ª—è –ª—ñ–≤—à—ñ)
- –ó–∞–±–µ–∑–ø–µ—á—Ç–µ —Ö–æ—Ä–æ—à–µ –æ—Å–≤—ñ—Ç–ª–µ–Ω–Ω—è –±–µ–∑ —Ç—ñ–Ω–µ–π
- –†–æ–∑–ø—Ä—è–º—ñ—Ç—å –¥–æ–ª–æ–Ω—é –ø–æ–≤–Ω—ñ—Å—Ç—é –¥–ª—è –∫—Ä–∞—â–æ—ó –≤–∏–¥–∏–º–æ—Å—Ç—ñ –ª—ñ–Ω—ñ–π
- –§–æ—Ç–æ –º–∞—î –±—É—Ç–∏ —á—ñ—Ç–∫–∏–º, —â–æ–± –±—É–ª–æ –≤–∏–¥–Ω–æ –≤—Å—ñ –ª—ñ–Ω—ñ—ó —Ä—É–∫–∏`);
    
    logActivity(ctx, `–í–∏–±—Ä–∞–≤ —Ç–∏–ø –∞–Ω–∞–ª—ñ–∑—É —Ä—É–∫–∏: ${type}`);
  });

  // –û–±—Ä–æ–±–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∏—Ö —Ñ–æ—Ç–æ –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É —Ä—É–∫–∏
  bot.on('photo', async (ctx) => {
    if (ctx.session.mode !== 'palmreading' || !ctx.session.palmReadingType) return;
    
    try {
      await ctx.reply('–û—Ç—Ä–∏–º—É—é —Ñ–æ—Ç–æ –≤–∞—à–æ—ó –¥–æ–ª–æ–Ω—ñ. –ü–æ—á–∏–Ω–∞—é –∞–Ω–∞–ª—ñ–∑...');
      
      // –û—Ç—Ä–∏–º–∞–Ω–Ω—è –Ω–∞–π–±—ñ–ª—å—à–æ—ó –≤–µ—Ä—Å—ñ—ó —Ñ–æ—Ç–æ
      const fileId = ctx.message.photo[ctx.message.photo.length - 1].file_id;
      const fileLink = await ctx.telegram.getFileLink(fileId);
      
      // –¢–∏–ø –∞–Ω–∞–ª—ñ–∑—É
      const analysisType = ctx.session.palmReadingType;
      
      // –ó–∞–ø–∏—Ç –¥–æ OpenAI –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –¥–æ —Ç–∏–ø—É –∞–Ω–∞–ª—ñ–∑—É
      let prompt;
      
      switch (analysisType) {
        case 'üëã –ó–∞–≥–∞–ª—å–Ω–∏–π –∞–Ω–∞–ª—ñ–∑ —Ä—É–∫–∏':
          prompt = `–¢–∏ - –µ–∫—Å–ø–µ—Ä—Ç –∑ —Ö—ñ—Ä–æ–º–∞–Ω—Ç—ñ—ó. –ó—Ä–æ–±–∏ –∑–∞–≥–∞–ª—å–Ω–∏–π –¥–µ—Ç–∞–ª—å–Ω–∏–π –∞–Ω–∞–ª—ñ–∑ –¥–æ–ª–æ–Ω—ñ –∑–∞ —Ñ–æ—Ç–æ. 
          –†–æ–∑–≥–ª—è–Ω—å –æ—Å–Ω–æ–≤–Ω—ñ –ª—ñ–Ω—ñ—ó (–∂–∏—Ç—Ç—è, —Å–µ—Ä—Ü—è, –≥–æ–ª–æ–≤–∏, –¥–æ–ª—ñ), –ø–∞–≥–æ—Ä–±–∏, —Ñ–æ—Ä–º—É —Ä—É–∫–∏ —Ç–∞ –ø–∞–ª—å—Ü—ñ–≤.
          –î–∞–π –∑–∞–≥–∞–ª—å–Ω—É —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫—É –æ—Å–æ–±–∏—Å—Ç–æ—Å—Ç—ñ, —Ö–∞—Ä–∞–∫—Ç–µ—Ä—É, –æ—Å–æ–±–ª–∏–≤–æ—Å—Ç–µ–π –∂–∏—Ç—Ç—î–≤–æ–≥–æ —à–ª—è—Ö—É.
          –í–∏—Å–ª–æ–≤–ª—é–π—Å—è —è–∫ –¥–æ—Å–≤—ñ–¥—á–µ–Ω–∏–π —Ö—ñ—Ä–æ–º–∞–Ω—Ç, –∞–ª–µ –∑—Ä–æ–∑—É–º—ñ–ª–æ –¥–ª—è –∑–≤–∏—á–∞–π–Ω–æ—ó –ª—é–¥–∏–Ω–∏.
          –ü–∏—à–∏ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –º–æ–≤–æ—é.`;
          break;
          
        case '‚ù§Ô∏è –õ—ñ–Ω—ñ—ó –∫–æ—Ö–∞–Ω–Ω—è':
          prompt = `–¢–∏ - –µ–∫—Å–ø–µ—Ä—Ç –∑ —Ö—ñ—Ä–æ–º–∞–Ω—Ç—ñ—ó. –ó—Ä–æ–±–∏ –¥–µ—Ç–∞–ª—å–Ω–∏–π –∞–Ω–∞–ª—ñ–∑ –ª—ñ–Ω—ñ–π, —â–æ —Å—Ç–æ—Å—É—é—Ç—å—Å—è –∫–æ—Ö–∞–Ω–Ω—è —Ç–∞ –≤—ñ–¥–Ω–æ—Å–∏–Ω –Ω–∞ –¥–æ–ª–æ–Ω—ñ:
          –ª—ñ–Ω—ñ—è —Å–µ—Ä—Ü—è, —à–ª—é–±–Ω—ñ –ª—ñ–Ω—ñ—ó, –ª—ñ–Ω—ñ—è –í–µ–Ω–µ—Ä–∏, –ø–∞–≥–æ—Ä–± –í–µ–Ω–µ—Ä–∏ —Ç–æ—â–æ.
          –û–ø–∏—à–∏ –µ–º–æ—Ü—ñ–π–Ω—É –ø—Ä–∏—Ä–æ–¥—É –ª—é–¥–∏–Ω–∏, —ó—ó —Å—Ö–∏–ª—å–Ω–æ—Å—Ç—ñ —É –≤—ñ–¥–Ω–æ—Å–∏–Ω–∞—Ö, –ø–æ—Ç–µ–Ω—Ü—ñ–π–Ω—ñ —à–ª—é–±–∏/–∑–Ω–∞—á–Ω—ñ —Å—Ç–æ—Å—É–Ω–∫–∏.
          –î–∞–π –ø—Ä–æ–≥–Ω–æ–∑ —â–æ–¥–æ –ª—é–±–æ–≤–Ω–∏—Ö –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤.
          –ü–∏—à–∏ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –º–æ–≤–æ—é, –¥–µ—Ç–∞–ª—å–Ω–æ, –∞–ª–µ –¥–æ—Å—Ç—É–ø–Ω–æ.`;
          break;
          
        case 'üíº –ö–∞—Ä\'—î—Ä–∞ —ñ –¥–æ—Å—Ç–∞—Ç–æ–∫':
          prompt = `–¢–∏ - –µ–∫—Å–ø–µ—Ä—Ç –∑ —Ö—ñ—Ä–æ–º–∞–Ω—Ç—ñ—ó. –ó—Ä–æ–±–∏ –¥–µ—Ç–∞–ª—å–Ω–∏–π –∞–Ω–∞–ª—ñ–∑ –ª—ñ–Ω—ñ–π —ñ –∑–Ω–∞–∫—ñ–≤, —â–æ —Å—Ç–æ—Å—É—é—Ç—å—Å—è –∫–∞—Ä'—î—Ä–∏ —Ç–∞ —Ñ—ñ–Ω–∞–Ω—Å—ñ–≤:
          –ª—ñ–Ω—ñ—è –¥–æ–ª—ñ, –ª—ñ–Ω—ñ—è –°–æ–Ω—Ü—è (—É—Å–ø—ñ—Ö—É), –ø–∞–≥–æ—Ä–± –Æ–ø—ñ—Ç–µ—Ä–∞ (–∞–º–±—ñ—Ü—ñ—ó), –ø–∞–≥–æ—Ä–± –ú–µ—Ä–∫—É—Ä—ñ—è (–±—ñ–∑–Ω–µ—Å), –ª—ñ–Ω—ñ—è –°–∞—Ç—É—Ä–Ω–∞.
          –û–ø–∏—à–∏ –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω—ñ —Å—Ö–∏–ª—å–Ω–æ—Å—Ç—ñ, —Ç–∞–ª–∞–Ω—Ç–∏, –ø–æ—Ç–µ–Ω—Ü—ñ–∞–ª –¥–ª—è –±–∞–≥–∞—Ç—Å—Ç–≤–∞, –º–æ–∂–ª–∏–≤—ñ –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω—ñ –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è.
          –î–∞–π —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó —â–æ–¥–æ –Ω–∞–π–±—ñ–ª—å—à —Å–ø—Ä–∏—è—Ç–ª–∏–≤–∏—Ö —Å—Ñ–µ—Ä –¥—ñ—è–ª—å–Ω–æ—Å—Ç—ñ.
          –ü–∏—à–∏ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –º–æ–≤–æ—é, —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–≤–∞–Ω–æ —ñ –∑—Ä–æ–∑—É–º—ñ–ª–æ.`;
          break;
          
        case 'üß¨ –ó–¥–æ—Ä–æ–≤\'—è —ñ –¥–æ–≤–≥–æ–ª—ñ—Ç—Ç—è':
          prompt = `–¢–∏ - –µ–∫—Å–ø–µ—Ä—Ç –∑ —Ö—ñ—Ä–æ–º–∞–Ω—Ç—ñ—ó. –ó—Ä–æ–±–∏ –¥–µ—Ç–∞–ª—å–Ω–∏–π –∞–Ω–∞–ª—ñ–∑ –ª—ñ–Ω—ñ–π —ñ –∑–Ω–∞–∫—ñ–≤, —â–æ —Å—Ç–æ—Å—É—é—Ç—å—Å—è –∑–¥–æ—Ä–æ–≤'—è —Ç–∞ –¥–æ–≤–≥–æ–ª—ñ—Ç—Ç—è:
          –ª—ñ–Ω—ñ—è –∂–∏—Ç—Ç—è, –ª—ñ–Ω—ñ—è –∑–¥–æ—Ä–æ–≤'—è, –æ—Å—Ç—Ä–æ–≤–∏/–ø–µ—Ä–µ—Ä–≤–∏ –≤ –ª—ñ–Ω—ñ—è—Ö.
          –ó–≤–µ—Ä–Ω–∏ —É–≤–∞–≥—É –Ω–∞ –ø–æ—Ç–µ–Ω—Ü—ñ–π–Ω—ñ —Å—Ö–∏–ª—å–Ω–æ—Å—Ç—ñ –¥–æ –ø–µ–≤–Ω–∏—Ö –ø—Ä–æ–±–ª–µ–º –∑—ñ –∑–¥–æ—Ä–æ–≤'—è–º.
          –û–ø–∏—à–∏ –∑–∞–≥–∞–ª—å–Ω–∏–π –µ–Ω–µ—Ä–≥–µ—Ç–∏—á–Ω–∏–π —Å—Ç–∞–Ω, –≤–∏—Ç—Ä–∏–≤–∞–ª—ñ—Å—Ç—å, –ø–æ—Ç–µ–Ω—Ü—ñ–π–Ω—ñ —Å–∏–ª—å–Ω—ñ —Ç–∞ —Å–ª–∞–±–∫—ñ —Å—Ç–æ—Ä–æ–Ω–∏ –æ—Ä–≥–∞–Ω—ñ–∑–º—É.
          –î–∞–π —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó —â–æ–¥–æ –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ –∑–¥–æ—Ä–æ–≤'—è –Ω–∞ –æ—Å–Ω–æ–≤—ñ –ø–æ–±–∞—á–µ–Ω–æ–≥–æ –≤ –¥–æ–ª–æ–Ω—ñ.
          –ü–∏—à–∏ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –º–æ–≤–æ—é, —ñ–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ, –∞–ª–µ –¥–µ–ª—ñ–∫–∞—Ç–Ω–æ.`;
          break;
      }
      
      // –¢—É—Ç –º–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ mock-–∞–Ω–∞–ª—ñ–∑, –æ—Å–∫—ñ–ª—å–∫–∏ GPT –Ω–µ –º–æ–∂–µ –∞–Ω–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º—É —á–∞—Å—ñ
      // –≤ –ø–æ–≤–Ω–æ—Ü—ñ–Ω–Ω—ñ–π —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—ó —Ü–µ –º–∞–≤ –±–∏ –±—É—Ç–∏ –∑–∞–ø–∏—Ç –¥–æ GPT-4 Vision –∞–±–æ —ñ–Ω—à–æ—ó —Å–∏—Å—Ç–µ–º–∏ –∞–Ω–∞–ª—ñ–∑—É –∑–æ–±—Ä–∞–∂–µ–Ω—å
      await ctx.reply('–ê–Ω–∞–ª—ñ–∑—É—é –ª—ñ–Ω—ñ—ó —Ç–∞ –∑–Ω–∞–∫–∏ –Ω–∞ –≤–∞—à—ñ–π –¥–æ–ª–æ–Ω—ñ...');
      
      const analysis = await callOpenAI(prompt);
      
      await ctx.reply(analysis);
      
      // –û—á–∏—â–µ–Ω–Ω—è —Å–µ—Å—ñ—ó
      ctx.session.palmReadingType = null;
      
      logActivity(ctx, `–û—Ç—Ä–∏–º–∞–≤ –∞–Ω–∞–ª—ñ–∑ —Ä—É–∫–∏: ${analysisType}`);
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ –∞–Ω–∞–ª—ñ–∑—É —Ä—É–∫–∏:', error);
      await ctx.reply('–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª—ñ–∑—ñ —Ñ–æ—Ç–æ. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ –∞–±–æ –∑–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ —è–∫—ñ—Å–Ω—ñ—à–µ —Ñ–æ—Ç–æ.');
      
      // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –º–æ–Ω–µ—Ç–∏ —É –≤–∏–ø–∞–¥–∫—É –ø–æ–º–∏–ª–∫–∏ (3 –º–æ–Ω–µ—Ç–∏)
      ctx.session.user.coins += 3;
    }
  });
}

module.exports = {
  setupPalmReadingMode
};
