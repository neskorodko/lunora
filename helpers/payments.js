// helpers/payments.js - –ª–æ–≥—ñ–∫–∞ Telegram Payments
const { Markup } = require('telegraf');
const logger = require('./logger');

/**
 * –í—ñ–¥–æ–±—Ä–∞–∂–∞—î –º–∞–≥–∞–∑–∏–Ω –∑ —Ä—ñ–∑–Ω–∏–º–∏ –ø–∞–∫–µ—Ç–∞–º–∏ –º–æ–Ω–µ—Ç
 * @param {Object} ctx - –ö–æ–Ω—Ç–µ–∫—Å—Ç Telegraf
 */
function showShop(ctx) {
  const currency = process.env.CURRENCY || 'UAH';
  
  const prices = [
    { label: '20 –º–æ–Ω–µ—Ç', amount: 20, price: 29 },
    { label: '50 –º–æ–Ω–µ—Ç', amount: 50, price: 59 },
    { label: '100 –º–æ–Ω–µ—Ç', amount: 100, price: 99 },
    { label: '200 –º–æ–Ω–µ—Ç', amount: 200, price: 179 }
  ];
  
  const buttons = prices.map(item => {
    return [
      Markup.button.callback(
        `${item.label} - ${item.price} ${currency}`, 
        `buy_${item.amount}_${item.price}`
      )
    ];
  });
  
  ctx.reply('üõí –û–±–µ—Ä—ñ—Ç—å –ø–∞–∫–µ—Ç –º–æ–Ω–µ—Ç –¥–ª—è –ø–æ–∫—É–ø–∫–∏:', {
    reply_markup: {
      inline_keyboard: [
        ...buttons,
        [Markup.button.callback('‚ùå –ó–∞–∫—Ä–∏—Ç–∏', 'close_shop')]
      ]
    }
  });
}

/**
 * –û–±—Ä–æ–±–ª—è—î –∫–æ–ª–±–µ–∫ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –º–æ–Ω–µ—Ç
 * @param {Object} ctx - –ö–æ–Ω—Ç–µ–∫—Å—Ç Telegraf
 */
function handleBuyCallback(ctx) {
  const match = ctx.match[0].match(/buy_(\d+)_(\d+)/);
  if (!match) return;
  
  const amount = parseInt(match[1]);
  const price = parseInt(match[2]);
  const currency = process.env.CURRENCY || 'UAH';
  
  if (!process.env.PROVIDER_TOKEN) {
    ctx.reply('‚ö†Ô∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ø–ª–∞—Ç–µ–∂—ñ–≤ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –ó–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞.');
    logger.error('PROVIDER_TOKEN –Ω–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ');
    return;
  }
  
  // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–ª–∞—Ç—ñ–∂–Ω–æ–≥–æ —ñ–Ω–≤–æ–π—Å–∞
  ctx.replyWithInvoice({
    title: `${amount} –º–æ–Ω–µ—Ç –¥–ª—è Lunora`,
    description: `–ü–æ–ø–æ–≤–Ω–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É –Ω–∞ ${amount} –º–æ–Ω–µ—Ç –¥–ª—è –±—ñ–ª—å—à–µ –¥–æ—Å—Ç—É–ø—É –¥–æ —Ñ—É–Ω–∫—Ü—ñ–π`,
    payload: `coins_${amount}`,
    provider_token: process.env.PROVIDER_TOKEN,
    currency,
    prices: [{ label: `${amount} –º–æ–Ω–µ—Ç`, amount: price * 100 }], // —É –∫–æ–ø—ñ–π–∫–∞—Ö
    start_parameter: 'get_coins'
  });
  
  logger.info(`User ${ctx.from.id} initiated purchase of ${amount} coins`);
}

/**
 * –û–±—Ä–æ–±–Ω–∏–∫ pre_checkout_query –¥–ª—è Telegram Payments
 * @param {Object} ctx - –ö–æ–Ω—Ç–µ–∫—Å—Ç Telegraf
 */
function handlePreCheckout(ctx) {
  // –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∑–∞–ø–∏—Ç—É –Ω–∞ –ø–µ—Ä–µ–¥–ø–ª–∞—Ç—É
  ctx.answerPreCheckoutQuery(true);
  logger.info(`Pre-checkout confirmed for user ${ctx.from.id}`);
}

/**
 * –û–±—Ä–æ–±–Ω–∏–∫ successful_payment –¥–ª—è Telegram Payments
 * @param {Object} ctx - –ö–æ–Ω—Ç–µ–∫—Å—Ç Telegraf
 */
function handleSuccessfulPayment(ctx) {
  const payload = ctx.update.message.successful_payment.invoice_payload;
  const match = payload.match(/coins_(\d+)/);
  
  if (!match) {
    logger.error(`Invalid payment payload: ${payload}`);
    ctx.reply('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –∑ –ø–ª–∞—Ç–µ–∂–µ–º. –ó–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –ø—ñ–¥—Ç—Ä–∏–º–∫–∏.');
    return;
  }
  
  const amount = parseInt(match[1]);
  
  // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, —è–∫—â–æ —Ü–µ –ø–µ—Ä—à–∏–π –ø–ª–∞—Ç—ñ–∂
  if (!ctx.session.user) {
    ctx.session.user = {
      id: ctx.from.id,
      coins: 0,
      subscriptions: []
    };
  }
  
  // –î–æ–¥–∞–≤–∞–Ω–Ω—è –º–æ–Ω–µ—Ç –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
  ctx.session.user.coins += amount;
  
  ctx.reply(
    `‚úÖ –û–ø–ª–∞—Ç–∞ —É—Å–ø—ñ—à–Ω–∞!\n\n` +
    `ü™ô –î–æ–¥–∞–Ω–æ ${amount} –º–æ–Ω–µ—Ç –¥–æ –≤–∞—à–æ–≥–æ –±–∞–ª–∞–Ω—Å—É.\n` +
    `üí∞ –ù–æ–≤–∏–π –±–∞–ª–∞–Ω—Å: ${ctx.session.user.coins} –º–æ–Ω–µ—Ç`
  );
  
  logger.info(`User ${ctx.from.id} successfully purchased ${amount} coins. New balance: ${ctx.session.user.coins}`);
}

/**
 * –ó–∞–∫—Ä–∏—Ç—Ç—è –≤—ñ–∫–Ω–∞ –º–∞–≥–∞–∑–∏–Ω—É
 * @param {Object} ctx - –ö–æ–Ω—Ç–µ–∫—Å—Ç Telegraf
 */
function closeShop(ctx) {
  ctx.deleteMessage();
  ctx.answerCbQuery('–ú–∞–≥–∞–∑–∏–Ω –∑–∞–∫—Ä–∏—Ç–æ');
}

// –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –º–∞–≥–∞–∑–∏–Ω—É
function registerHandlers(bot) {
  bot.action(/buy_\d+_\d+/, handleBuyCallback);
  bot.action('close_shop', closeShop);
}

module.exports = {
  showShop,
  handlePreCheckout,
  handleSuccessfulPayment,
  registerHandlers
};
